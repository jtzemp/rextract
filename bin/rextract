#!/usr/bin/env ruby
# -*- coding: utf-8 -*-
require 'rubygems'
require 'thor'
require 'thor/group'

class RextractApp < Thor::Group
  include Thor::Actions
  
  argument :name
  
  def self.source_root
    File.dirname(__FILE__)
  end
  
  def create_project_dir
    puts "create_project_dir #{name} & #{RextractApp.source_root}. dest: #{destination_root}"
  end
  
  def copy_run
    puts "copy_run #{name} & #{RextractApp.source_root}. dest: #{destination_root}"
  end
  
  def create_job_dir
    puts "create_job_dir #{name} & #{RextractApp.source_root}. dest: #{destination_root}"
  end
  
  def create_job_parser
    puts "create_job_parser #{name} & #{RextractApp.source_root}. dest: #{destination_root}"
  end
  
  def create_job_spider
    puts "create_job_spider #{name} & #{RextractApp.source_root}. dest: #{destination_root}"
  end
end

# rextract project project_name
# rextract job job_name

RextractApp.start
# class Newgem < Thor::Group
#   include Thor::Actions
# 
#   # Define arguments and options
#   argument :name
#   class_option :test_framework, :default => :test_unit
# 
#   def self.source_root
#     File.dirname(__FILE__)
#   end
# 
#   def create_lib_file
#     template('templates/newgem.tt', "#{name}/lib/#{name}.rb")
#   end
# 
#   def create_test_file
#     test = options[:test_framework] == "rspec" ? :spec : :test
#     create_file "#{name}/#{test}/#{name}_#{test}.rb"
#   end
# 
#   def copy_licence
#     if yes?("Use MIT license?")
#       # Make a copy of the MITLICENSE file at the source root
#       copy_file "MITLICENSE", "#{name}/MITLICENSE"
#     else
#       say "Shame on youâ€¦", :red
#     end
#   end
# end
